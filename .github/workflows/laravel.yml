# Github Action for laravel.
# Setup using mysql and redis.
name: WebTheory Testing with Laravel, MySQL, Redis

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  laravel-tests:
    name: Laravel PHP 7.4

    # use latest ubuntu machine
    runs-on: ubuntu-latest

    # setup environment variables
    env:
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
      BROADCAST_DRIVER: log
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis

    # install MySQL and Redis.
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    # perform following steps to install application and configure it.
    steps:
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug

      - name: Checkout
        uses: actions/checkout@v2

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Composer Dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Clear Config
        run: php artisan config:clear

      - name: Create Test Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run Migration
        run: php artisan migrate --no-interaction --force -v --env=testing
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
        run: vendor/bin/phpunit --coverage-text
